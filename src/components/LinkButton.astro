---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";

interface Props {
  link: string;
  text: string;
  fontColor?: string;
  type?: "primary" | "secondary";
  img?: ImageMetadata;
  size?: "xs" | "sm" | "base" | "lg";
}
const { link, text, type,  size, fontColor, img } = Astro.props;

const buttonTypes = {
  primary: "bg-yellow-300 text-black",
  secondary: "border border-yellow-300 backdrop-blur-md",
};

const buttonType = type ? buttonTypes[type] : buttonTypes.primary;
const buttonSize = {
  xs: "text-xs px-3 py-1",
  sm: "text-sm px-6 py-4",
  base: "text-base px-8 py-3",
  lg: "text-lg px-12 py-4",
};

const styles = {
  type: buttonType,
  fontColor: fontColor || "text-black",
  size: buttonSize[size || "base"],
};
---

<a href={link} class="inline-block">
  <p
    class:list={[
      "flex items-center justify-center rounded-xl font-bold transition-all duration-300 hover:bg-yellow-500",
      ...Object.values(styles),
    ]}
  >
    {text}

    {
      img && (
        <span class="pl-2">
          <Image
            src={img}
            alt=""
            class={`px-0.5 ${styles.fontColor === "text-black" && "invert"}`}
          />
        </span>
      )
    }
  </p>
</a>
