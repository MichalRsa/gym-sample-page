---
import OfferCard from "../components/OfferCard.astro";
import DoubleChevron from "../assets/images/double-chevron.svg";
import SectionHeader from "../components/SectionHeader.astro";
import LinkButton from "./LinkButton.astro";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";

const { withButton = false } = Astro.props;

type Pages = CollectionEntry<"pages">;

const { data } = await getEntry("offer", "offer");

interface Props {
  offer_section: Pages["data"]["offer_section"];
  withButton?: boolean;
}

const { offer_section } = Astro.props;

const populatedOfferSection = {
  ...offer_section,
  offer_list: offer_section.offer_list.map((id) =>
    data.offer_list.find((member) => member.id === id),
  ),
};
---

<div id="offer">
  <section
    class:list={["animationHidden animationBottom", "container mx-auto py-16"]}
  >
    <SectionHeader text={offer_section.heading} />
    <p class="mx-auto max-w-[510px] pt-5 text-xl lg:text-4xl">
      {offer_section.sub_heading}
    </p>

    <div class="grid gap-4 py-10 lg:grid-cols-2">
      <div class="grid gap-4">
        {
          populatedOfferSection.offer_list
            .slice(0, 2)
            .map(
              (offerItem, index) =>
                offerItem && (
                  <OfferCard offerItem={offerItem} index={index + 1} />
                ),
            )
        }
      </div>
      <div class="grid gap-4">
        {
          populatedOfferSection.offer_list
            .slice(2)
            .map(
              (offerItem, index) =>
                offerItem && <OfferCard offerItem={offerItem} index={index} />,
            )
        }
      </div>
    </div>
    {
      withButton && (
        <div class="text-center lg:text-3xl">
          <LinkButton
            link="/offer"
            text="See All Classes"
            img={DoubleChevron}
            size="lg"
          />
        </div>
      )
    }
  </section>
</div>
